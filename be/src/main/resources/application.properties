spring.application.name=commentpayment

base_url=${base_url}

razorpay.key.id=${razorpay_key_id}
razorpay.secret.id=${razorpay_secret_id}

spring.datasource.url=jdbc:mysql://mysql-db:3306/${db_name}
spring.datasource.username=${db_user}
spring.datasource.password=${db_pass}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.show-sql=true

spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.url=jdbc:mysql://mysql-db:3306/${db_name}
spring.flyway.user=${db_user}
spring.flyway.password=${db_pass}

logging.level.org.flywaydb=DEBUG


# Google Login
spring.security.oauth2.client.registration.google.client-id=${google_oauth_client_id}
spring.security.oauth2.client.registration.google.client-secret=${google_oauth_client_secret}
spring.security.oauth2.client.registration.google.scope=profile, email

logging.level.org.springframework.security=TRACE

management.endpoints.web.exposure.include=*

# Using this because otherwise spring security was producing an incorrect redirect URI (redirect_uri=http://localhost:443/login/oauth2/code/google)
spring.security.oauth2.client.registration.google.redirect-uri=${base_url}login/oauth2/code/google

# To make spring security read x-headers forwarded by nginx
server.forward-headers-strategy=native

# Default is 'None' which is not good as it can lead to CSRF
# 'strict' is not ideal because after the login is successful, google redirects to https://localhost/login/oauth2/code/google which fails to send the cookie as it is set to 'strict'. Redirected requests doesn't send strict cookies
# That's why lax
server.servlet.session.cookie.same-site=lax







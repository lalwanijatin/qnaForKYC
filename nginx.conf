
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
	
	# Rate limiting zone definition
    limit_req_zone $binary_remote_addr zone=rate_limit:10m rate=5r/s;

    #gzip  on;
		
		server {
			listen       443 ssl;
			server_name  localhost;
			
			ssl_certificate     localhost.crt;
			ssl_certificate_key localhost.key;
			
			# Frontend server on port 8080
			location / {
				root   /app/dist;
				index  index.html index.htm;
				try_files $uri /index.html;  # Redirect all paths to index.html
			}
			
			location /api/ {
				limit_req zone=rate_limit burst=10 nodelay;
				proxy_pass http://be:8080;  # Your backend API server
				proxy_set_header Host $host;
			}
			
			location /login/oauth2/ {
				limit_req zone=rate_limit burst=10 nodelay;
				proxy_pass http://be:8080/login/oauth2/;  # Ensure the path is preserved
				proxy_set_header Host $host;
				proxy_set_header X-Forwarded-Proto $scheme;  # Forward the scheme (http/https)
				proxy_set_header X-Forwarded-Port $server_port;  # Forward the port
			}

			location /oauth2/ {
				limit_req zone=rate_limit burst=10 nodelay;
				proxy_pass http://be:8080/oauth2/;  # Ensure the path is preserved
				proxy_set_header Host $host;
				proxy_set_header X-Forwarded-Proto $scheme;  # Forward the scheme (http/https)
				proxy_set_header X-Forwarded-Port $server_port;  # Forward the port
			}

		}

}
